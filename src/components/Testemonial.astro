---
const {
  titel = "",
  stjerner = "5",
  anmeldelseid = "",
  date = "",
} = Astro.props;

// generer initialer fra avatar-navnet
const getInitials = (name) => {
  return name
    .split(" ")
    .map((word) => word[0])
    .join("")
    .toUpperCase();
};

const initials = getInitials(titel);
---

<article
  class="mb-6 p-6 w-auto h-auto group relative overflow-hidden transform hover:scale-[1.02] transition-all duration-300"
  style="
    background-color: var(--color-base-200);
    border-radius: var(--radius-box);
    opacity: 95%;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    
  "
>
  <!-- Header med avatar-->
  <div class="flex items-start mb-4 mt-2">
    <div class="flex-shrink-0 mr-4">
      <div
        class="w-12 h-12 rounded-full flex items-center justify-center text-[var(--color-primary-content)] font-bold text-sm shadow-md border-2 border-[var(--color-primary-content)]"
        style="background-color: var(--color-accent);"
      >
        {initials}
      </div>
    </div>

    <div class="flex-grow">
      <div
        class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-2"
      >
        <h4 class="font-bold text-lg" style="color: var(--color-primary);">
          {titel}
        </h4>
      </div>

      <!-- stjerner -->
      <div class="flex items-center mb-2">
        <div class="flex mr-3" id={anmeldelseid}></div>
        <span class="text-sm opacity-70" style="color: var(--color-primary);"
          >({stjerner}/5 stjerner)</span
        >
      </div>

      {
        date && (
          <p class="text-sm opacity-60" style="color: var(--color-primary);">
            {date}
          </p>
        )
      }
    </div>
  </div>

  <!-- tekst content -->
  <div style="border-color: var(--color-accent);">
    <p
      class="leading-relaxed text-base font-medium"
      style="color: var(--color-primary);"
    >
      <slot />
    </p>
  </div>
</article>

<script define:vars={{ stjerner, anmeldelseid }}>
  const container = document.getElementById(anmeldelseid);
  if (container) {
    let starsHTML = "";

    // Add fyldte stjerner
    for (let i = 0; i < parseInt(stjerner); i++) {
      starsHTML += `
        <span class="inline-block w-5 h-5 mr-1 hover:scale-110 transition-transform duration-200 cursor-pointer">
          <svg fill="currentColor" viewBox="0 0 24 24" class="w-full h-full" style="color: var(--color-accent);">
            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
          </svg>
        </span>`;
    }

    container.innerHTML = starsHTML;
  }
</script>

<style>
  article {
    animation: gentleFadeIn 0.8s ease-out;
  }

  @keyframes gentleFadeIn {
    from {
      opacity: 0;
      transform: translateY(15px);
    }
    to {
      opacity: 0.95;
      transform: translateY(0);
    }
  }
</style>
